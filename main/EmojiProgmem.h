#ifndef EMOJI_PROGMEM_H
#define EMOJI_PROGMEM_H

struct Emoji {
  uint8_t pixels[64][3];
};

// Heart emoji
const PROGMEM Emoji HEART = {{
  {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0},
  {0,0,0}, {255,0,0}, {255,0,0}, {0,0,0}, {0,0,0}, {255,0,0}, {255,0,0}, {0,0,0},
  {255,0,0}, {255,0,0}, {255,0,0}, {255,0,0}, {255,0,0}, {255,0,0}, {255,0,0}, {255,0,0},
  {255,0,0}, {255,0,0}, {255,0,0}, {255,0,0}, {255,0,0}, {255,0,0}, {255,0,0}, {255,0,0},
  {255,0,0}, {255,0,0}, {255,0,0}, {255,0,0}, {255,0,0}, {255,0,0}, {255,0,0}, {255,0,0},
  {0,0,0}, {255,0,0}, {255,0,0}, {255,0,0}, {255,0,0}, {255,0,0}, {255,0,0}, {0,0,0},
  {0,0,0}, {0,0,0}, {255,0,0}, {255,0,0}, {255,0,0}, {255,0,0}, {0,0,0}, {0,0,0},
  {0,0,0}, {0,0,0}, {0,0,0}, {255,0,0}, {255,0,0}, {0,0,0}, {0,0,0}, {0,0,0}
}};

// Smiley Emoji
const PROGMEM Emoji SMILEY = {{
  {0,0,0}, {0,0,0}, {255,255,0}, {255,255,0}, {255,255,0}, {255,255,0}, {0,0,0}, {0,0,0},
  {0,0,0}, {255,255,0}, {255,255,0}, {255,255,0}, {255,255,0}, {255,255,0}, {255,255,0}, {0,0,0},
  {255,255,0}, {255,255,0}, {255,0,0}, {255,255,0}, {255,255,0}, {255,0,0}, {255,255,0}, {255,255,0},
  {255,255,0}, {255,255,0}, {255,0,0}, {255,255,0}, {255,255,0}, {255,0,0}, {255,255,0}, {255,255,0},
  {255,255,0}, {255,255,0}, {255,255,0}, {255,255,0}, {255,255,0}, {255,255,0}, {255,255,0}, {255,255,0},
  {255,255,0}, {0,0,0}, {255,255,0}, {255,255,0}, {255,255,0}, {255,255,0}, {0,0,0}, {255,255,0},
  {0,0,0}, {255,255,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {255,255,0}, {0,0,0},
  {0,0,0}, {0,0,0}, {255,255,0}, {255,255,0}, {255,255,0}, {255,255,0}, {0,0,0}, {0,0,0}
}};


void renderEmoji(Adafruit_NeoPixel& strip, const Emoji* emoji, bool rotate180 = true) {
  for (int i = 0; i < 64; i++) {
    int pixelIndex = rotate180 ? (63 - i) : i;
    uint8_t r = pgm_read_byte(&emoji->pixels[i][0]);
    uint8_t g = pgm_read_byte(&emoji->pixels[i][1]);
    uint8_t b = pgm_read_byte(&emoji->pixels[i][2]);
    strip.setPixelColor(pixelIndex, r, g, b);
    strip.show();
    delay(15);
  }
  delay(10000);
}

#endif